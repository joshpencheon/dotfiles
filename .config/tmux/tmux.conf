 # Use C-Space instead of C-b for tmux. C-Space C-Space to get "C-Space".
unbind-key C-b
set -g prefix C-Space
bind-key C-Space send-prefix

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"

# force true colour on:
set -ga terminal-overrides ",xterm-256color:Tc"

# Lower key repeat rate (default: 500ms)
set -g repeat-time 125
# Don't wait for escape sequences:
set -s escape-time 0

# Show messages for 1 second:
set -g display-time 1000

# Ensure e.g. <Ctrl><Enter> gets sent:
set -g extended-keys on

# Ensure signals are properly sent to vim:
set -g focus-events on

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Retain meaningful scrollback
set -g history-limit 10000

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v     send-keys -X begin-selection
bind-key -T copy-mode-vi C-v   send-keys -X rectangle-toggle \; send-keys -X begin-selection
bind-key -T copy-mode-vi y     send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set -g renumber-windows on

# <Shift>-<Left/Right> to swap windows:
bind -n S-Left  previous-window
bind -n S-Right next-window

# <Ctrl><Shift>-<Left/Right> to reorder windows:
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

# Reload:
bind r source-file ~/.config/tmux/tmux.conf \; display-message "Config reloaded!"

# Enable mouse events:
set -g mouse on

# When scrolling up in normal mode, automatically select that pane,
# and enter copy mode (exiting again on scroll to bottom):
bind-key -n WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -n WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =;               send-keys -M"

# New panes should start in the current directory:
bind '"' split-window    -c "#{pane_current_path}"
bind %   split-window -h -c "#{pane_current_path}"
bind c   new-window      -c "#{pane_current_path}"

# Smart pane switching with awareness of vim splits.
# See https://github.com/neovim/neovim/issues/2048 for fix for <C-h> not working
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h   ) || tmux select-pane -L || tmux select-pane"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j   ) || tmux select-pane -D || tmux select-pane"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k   ) || tmux select-pane -U || tmux select-pane"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l   ) || tmux select-pane -R || tmux select-pane"

# Ensure "clear screen" is still accessible with the prefix (clear with tmux, not readline):
bind l   send-keys -R
bind C-l send-keys -R
bind k   clear-history
bind C-k clear-history

## status bar
set -g status-style bg="#090618"
set -g status-justify 'centre'

# left
set -g status-left-style fg="#dcd6ba",bg="#090618"
set -g status-left '#{?window_zoomed_flag,#[fg=#090618]#[bg=#ffa066] ZOOM ,}#[fg=#dcd6ba]#[bg=#090618]#{?client_prefix,#[fg=#090618]#[bg=#ffa066] ... ,     }'
set -g status-left-length '100'

# right
set -g status-right-style fg="color5",bg="#090618"
set -g status-right ' #(test -n "$SSH_CLIENT" && echo "$(whoami)@$(hostname -s)") '
set -g status-right-length '100'

## window options
# colour
set -g window-status-style fg="color2",bg="#090618"
set -g window-status-format ' #I #W '
set -g window-status-current-style fg="#090618",bg="color2"
set -g window-status-current-format ' #I #W '

## pane options
# colour
set -g pane-border-style fg="color0"
set -g pane-active-border-style fg="color2"

## message options
# colour
set -g message-style fg="#090618",bg="#ffa066"
